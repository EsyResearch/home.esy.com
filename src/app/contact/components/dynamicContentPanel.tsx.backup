'use client';

import React from 'react';
import { ArrowRight, Clock, Mail } from 'lucide-react';
import { currentTheme, contactPaths } from './constants';
import ContactForm from './ContactForm';

interface DynamicContentPanelProps {
  selectedPath: string | null;
  showForm: boolean;
  formData: {
    name: string;
    email: string;
    message: string;
  };
  onInputChange: (field: string, value: string) => void;
  onSubmit: () => void;
  onBack: () => void;
}

const DynamicContentPanel: React.FC<DynamicContentPanelProps> = ({
  selectedPath,
  showForm,
  formData,
  onInputChange,
  onSubmit,
  onBack
}) => {
  const handlePathAction = (pathId: string) => {
    if (pathId === 'early-access') {
      window.location.href = '/waitlist';
    } else if (pathId === 'demo') {
      window.location.href = '/book-demo';
    } else {
      // For partnership, show form
      onBack();
    }
  };

  return (
    <div style={{
      background: currentTheme.elevated,
      borderRadius: '12px',
      padding: '3rem',
      minHeight: '500px',
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'center'
    }}>
      {!selectedPath && !showForm && (
        <div style={{ textAlign: 'center' }}>
          <div style={{
            width: '80px',
            height: '80px',
            borderRadius: '50%',
            background: currentTheme.bg,
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            margin: '0 auto 2rem'
          }}>
            <Mail size={36} color={currentTheme.subtle} strokeWidth={1.5} />
          </div>
          <h3 style={{
            fontSize: '1.5rem',
            fontWeight: 300,
            marginBottom: '1rem'
          }}>
            Select an option to get started
          </h3>
          <p style={{
            fontSize: '1rem',
            color: currentTheme.subtle,
            lineHeight: 1.6
          }}>
            Choose how you&apos;d like to connect with us, and we&apos;ll guide you through the next steps.
          </p>
        </div>
      )}

      {selectedPath && !showForm && (
        <div>
          {(() => {
            const path = contactPaths.find(p => p.id === selectedPath);
            if (!path) return null;
            const Icon = path.icon;
            return (
              <>
                <div style={{
                  width: '64px',
                  height: '64px',
                  borderRadius: '12px',
                  background: currentTheme.accent,
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  marginBottom: '2rem'
                }}>
                  <Icon size={32} color="white" strokeWidth={1.5} />
                </div>
                
                <h2 style={{
                  fontSize: '2rem',
                  fontWeight: 300,
                  marginBottom: '1rem'
                }}>
                  {path.title}
                </h2>
                
                <p style={{
                  fontSize: '1.125rem',
                  color: currentTheme.muted,
                  marginBottom: '2.5rem',
                  lineHeight: 1.6
                }}>
                  {path.description}
                </p>

                <div style={{
                  marginBottom: '2.5rem'
                }}>
                  <h4 style={{
                    fontSize: '0.875rem',
                    fontWeight: 600,
                    textTransform: 'uppercase',
                    letterSpacing: '0.05em',
                    color: currentTheme.subtle,
                    marginBottom: '1rem'
                  }}>
                    What you&apos;ll get
                  </h4>
                  <ul style={{
                    listStyle: 'none',
                    padding: 0,
                    display: 'flex',
                    flexDirection: 'column',
                    gap: '0.75rem'
                  }}>
                    {path.details.map((detail, index) => (
                      <li key={index} style={{
                        display: 'flex',
                        alignItems: 'flex-start',
                        gap: '0.75rem',
                        fontSize: '0.938rem',
                        color: currentTheme.muted
                      }}>
                        <span style={{ color: currentTheme.accent, marginTop: '2px' }}>â€¢</span>
                        {detail}
                      </li>
                    ))}
                  </ul>
                </div>

                <button
                  onClick={() => handlePathAction(path.id)}
                  style={{
                    width: '100%',
                    padding: '1rem',
                    background: currentTheme.accent,
                    border: 'none',
                    borderRadius: '6px',
                    color: 'white',
                    fontSize: '1rem',
                    fontWeight: 500,
                    cursor: 'pointer',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    gap: '0.75rem',
                    transition: 'opacity 0.2s'
                  }}
                >
                  {path.action}
                  <ArrowRight size={18} />
                </button>

                <div style={{
                  marginTop: '1.5rem',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '0.5rem',
                  fontSize: '0.875rem',
                  color: currentTheme.subtle,
                  justifyContent: 'center'
                }}>
                  <Clock size={14} />
                  Response within 24 hours
                </div>
              </>
            );
          })()}
        </div>
      )}

      {showForm && (
        <ContactForm
          formData={formData}
          onInputChange={onInputChange}
          onSubmit={onSubmit}
          onBack={onBack}
        />
      )}
    </div>
  );
};

export default DynamicContentPanel; 